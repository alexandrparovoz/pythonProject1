# еще одна попытка написать маршрут графа
# YouTube Сергей Балакирев. Я слямзил.
import math

def get_link_v(v, graph):
    for i, weight in enumerate(graph[v]): # генератор формирующий список одной вершины
        if weight > 0:                    #  возвращает те вершины, вес которыхбольше ноля
            yield i

def arg_min(T, S):
    amin = -1 # если amin принимает значение -1 значит мы просмотрели все вершины
    m = max(T)  # мах значение в Т для упрощения
    for i, t in enumerate(T):
        if t < m and i not in S: # выбираем вершину с миним весом и не находящся в списке осмотренных
            m = t
            amin = i # индекс мин веса Он же является номером вершины
    return amin



graph = [[0, 2, 1, 2, 0],
        [2, 0, 4, 1, 3],
        [1, 4, 0, 2, 0],
        [2, 1, 2, 0, 3],
        [0, 3, 0, 3, 0]]
N = len(graph) # число вершин в графе
T = [math.inf] * N # последняя строка в таблице

v = 0  # стартовая вершина если нумераия с нуля
S = {v}
T[v] = 0

while v != -1:  # цикл пока не просмотрим все вершины
    for j in get_link_v(v, graph):  # преобразуем все связанные вершины с вершиной v
        if j not in S:              # если вершина еще не в списке
            w = T[v] + graph[v][j]
            if w < T[j]:
                T[j] = w

    v = arg_min(T, S) # берем следщий узел с наименьшим весом
    if v > 0:         #  выбираем очередную вершину
        S.add(v)      #  добавлям новую вершину в список

print(T)